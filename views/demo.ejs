<body>
    <section id="wrapper">
        <header>
            <h1>Notification Demo</h1>
        </header>

        <style>
            #chat {
                width: 97%;
            }
            .message {
                font-weight: bold;
            }
            .message:before {
                content: " ";
                color: #bbb;
                font-size: 14px;
            }

            #log {
                overflow: auto;
                max-height: 300px;
                list-style: none;
                padding: 0;
            }

            #log li {
                border-top: 1px solid #ccc;
                margin: 0;
                padding: 10px 0;
            }

            body {
                font: normal 16px/20px "Helvetica Neue", Helvetica, sans-serif;
                background: rgb(237, 237, 236);
                margin: 0;
                margin-top: 40px;
                padding: 0;
            }

            section,
            header {
                display: block;
            }

            #wrapper {
                width: 600px;
                margin: 0 auto;
                background: #fff;
                border-radius: 10px;
                border-top: 1px solid #fff;
                padding-bottom: 16px;
            }

            h1 {
                padding-top: 10px;
            }

            h2 {
                font-size: 100%;
                font-style: italic;
            }

            header,
            article > * {
                margin: 20px;
            }

            #status {
                padding: 5px;
                color: #fff;
                background: #ccc;
            }

            #status.fail {
                background: #c00;
            }

            #status.success {
                background: #0c0;
            }

            #status.offline {
                background: #c00;
            }

            #status.online {
                background: #0c0;
            }

            #html5badge {
                margin-left: -30px;
                border: 0;
            }

            #html5badge img {
                border: 0;
            }
        </style>

        <article>
            <p id="status">Not connected</p>
            <!-- <div>
                <input type="number" id="userId" placeholder="Enter user ID" />
            </div> -->
            <div id="notificaitons"></div>
        </article>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script>
            connected = document.getElementById("connected");
            stocksPrice = document.getElementById("stocksPrice");

            if (window.WebSocket === undefined) {
                state.innerHTML = "sockets not supported";
                state.className = "fail";
            } else {
                if (typeof String.prototype.startsWith != "function") {
                    String.prototype.startsWith = function(str) {
                        return this.indexOf(str) == 0;
                    };
                }

                window.addEventListener("load", onLoad, false);
            }

            function onLoad() {
                let wsUri = "ws://127.0.0.1:6969";
                websocket = new WebSocket(wsUri);
                websocket.onopen = function(evt) {
                    onOpen(evt);
                };
                websocket.onclose = function(evt) {
                    onClose(evt);
                };
                websocket.onmessage = function(evt) {
                    onMessage(evt);
                };
                websocket.onerror = function(evt) {
                    onError(evt);
                };
            }

            function onOpen(evt) {
                $("#status").html("<p>Connection opened!</p>");
            }

            function onClose(evt) {
                $("#status").html("<p>Connection closed!</p>");
            }

            function onMessage(evt) {
                let jsonData = evt.data ? JSON.parse(evt.data) : [];
                let stringData = evt.data ? evt.data : "";

                let all_notifications = jsonData;

                if (jsonData.length) {
                    if (all_notifications && all_notifications.length) {
                        setNotification(JSON.stringify(all_notifications));
                        $("#notificaitons").html("");
                        all_notifications.forEach(d => {
                            $("#notificaitons").append(
                                "<p>" + d.message + "</p>"
                            );
                        });
                    }
                } else {
                    $("#notificaitons").html("No data available...");
                }
            }

            function concatArray(existing_json, new_fetch) {
                let result = [...existing_json, ...new_fetch];
                return result;
            }

            function getNotification() {
                return localStorage.getItem("notification");
            }

            function setNotification(data) {
                let obj = {};
                let json = JSON.parse(data);
                if (json && json.length) {
                    obj = {
                        lastFetchedAt: json[0].created_at,
                        data: json
                    };
                    localStorage.setItem("notification", JSON.stringify(obj));
                }
            }

            function onError(evt) {
                console.log("ERR", evt);
            }

            function addMessage() {
                let _id = $("#userId").val();
                let query = { user: _id };
                websocket.send("notify_me");
            }
            setInterval(function() {
                addMessage();
            }, 2000);
        </script>
    </section>
</body>
